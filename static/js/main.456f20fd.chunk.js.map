{"version":3,"sources":["components/wrapper/wrapper.js","components/jumbotron/jumbotron.js","components/card/card.js","App.js","index.js"],"names":["Wrapper","props","className","children","Jumbotron","score","alert","Card","onClick","clicked","id","src","image","alt","name","shuffle","shoes","i","length","j","Math","floor","random","temp","App","state","clickedCard","indexOf","push","console","log","increaseScore","newShuffle","setState","this","map","shoe","Component","ReactDOM","render","document","getElementById"],"mappings":"2tCAOeA,MAJf,SAAiBC,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,Y,MCY1BC,MAbf,SAAmBH,GACf,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAIA,UAAU,YAAd,oBAAkCD,EAAMI,SACxC,uBACA,uBACA,oBAAIH,UAAU,QAAd,0BACA,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,Y,MCIhCC,MAXf,SAAcN,GACV,OACI,qBAAKC,UAAU,kBAAkBM,QAAS,kBAAMP,EAAMQ,QAAQR,EAAMS,KAApE,SAGI,qBAAKC,IAAKV,EAAMW,MAAOC,IAAKZ,EAAMa,U,OCA9C,SAASC,EAAQC,GAEb,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEf,OAAOP,E,IAyEIQ,E,4MApEXC,MAAQ,CACJT,QACAX,MAAO,EACPqB,YAAa,GACbpB,MAAO,oF,EAGXG,QAAU,SAAAC,GAEN,IAAIgB,EAAc,EAAKD,MAAMC,YACzBrB,EAAQ,EAAKoB,MAAMpB,OAEU,IAA7BqB,EAAYC,QAAQjB,IACtBgB,EAAYE,KAAKlB,GACjBmB,QAAQC,IAAIJ,GACZ,EAAKK,gBACL,EAAKC,aACL,EAAKC,SAAS,CACZ3B,MAAM,sFAEW,KAAVD,EACT,EAAK4B,SAAS,CACZ5B,MAAO,EACPC,MAAO,aAIT,EAAK2B,SAAS,CACZ5B,MAAO,EACPqB,YAAa,GACbpB,MAAO,4C,EAOfyB,cAAgB,WACZ,EAAKE,SAAS,CAAE5B,MAAO,EAAKoB,MAAMpB,MAAQ,K,EAG9C2B,WAAa,WACT,EAAKC,SAAS,CAAEjB,MAAOD,EAAQ,EAAKU,MAAMT,U,4CAG9C,WAAU,IAAD,OACL,OACI,gCACI,cAAC,EAAD,CACEV,MAAO4B,KAAKT,MAAMnB,MAClBD,MAAO6B,KAAKT,MAAMpB,QAEpB,cAAC,EAAD,UACK6B,KAAKT,MAAMT,MAAMmB,KAAI,SAAAC,GAAI,OACtB,cAAC,EAAD,CAEI1B,GAAI0B,EAAK1B,GACTI,KAAMsB,EAAKtB,KACXF,MAAOwB,EAAKxB,MACZH,QAAS,EAAKA,SAJT2B,EAAK1B,gB,GAxDpB2B,a,MCflBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.456f20fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./jumbotron.css\";\r\n\r\nfunction Jumbotron(props) {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h3 className=\"gameScore\">Score: {props.score}</h3>\r\n            <br />\r\n            <br />\r\n            <h1 className=\"title\">Clicky Game!</h1>\r\n            <h2 className=\"description\">{props.alert}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className='card click-item' onClick={() => props.clicked(props.id)}>\r\n                                       \r\n        \r\n            <img src={props.image} alt={props.name}  />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Wrapper from \"./components/wrapper/wrapper.js\"\r\nimport Jumbotron from \"./components/jumbotron/jumbotron.js\";\r\nimport Card from \"./components/card/card.js\";\r\nimport shoes from \"./shoes.json\";\r\n\r\n\r\n\r\nfunction shuffle(shoes) {\r\n\r\n    for (let i = shoes.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = shoes[i];\r\n        shoes[i] = shoes[j];\r\n        shoes[j] = temp;\r\n    }\r\n    return shoes;\r\n}\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        shoes,\r\n        score: 0,\r\n        clickedCard: [],\r\n        alert: \"Click on an image to earn points, but don't click on any picture more than once!\"\r\n    };\r\n\r\n    clicked = id => {\r\n\r\n        let clickedCard = this.state.clickedCard;\r\n        let score = this.state.score;\r\n\r\n        if (clickedCard.indexOf(id) === -1) {\r\n          clickedCard.push(id);\r\n          console.log(clickedCard);\r\n          this.increaseScore();\r\n          this.newShuffle();\r\n          this.setState({\r\n            alert:\"Click on an image to earn points, but don't click on any picture more than once!\"\r\n          })\r\n        } else if (score === 15) {\r\n          this.setState({\r\n            score: 0,\r\n            alert: \"You Win!\"\r\n          });\r\n          \r\n        } else {\r\n          this.setState({\r\n            score: 0,\r\n            clickedCard: [],\r\n            alert: \"You lose. Click on a shoe to try again\"\r\n          });\r\n        }\r\n\r\n      };\r\n\r\n\r\n    increaseScore = () => {\r\n        this.setState({ score: this.state.score + 1 })\r\n    }\r\n\r\n    newShuffle = () => {\r\n        this.setState({ shoes: shuffle(this.state.shoes) })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Jumbotron\r\n                  alert={this.state.alert}\r\n                  score={this.state.score}\r\n                />\r\n                <Wrapper>\r\n                    {this.state.shoes.map(shoe => (\r\n                        <Card\r\n                            key={shoe.id}\r\n                            id={shoe.id}\r\n                            name={shoe.name}\r\n                            image={shoe.image}\r\n                            clicked={this.clicked}\r\n                        />\r\n                    ))}\r\n\r\n                </Wrapper>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}